{
  "version": 3,
  "sources": ["../../code/day2.ts"],
  "sourcesContent": ["import { input } from \"../inputs/day2\";\n\ninterface BoxDimension {\n  length: number;\n  width: number;\n  height: number;\n}\n\ntype Dimensions = `${number}x${number}x${number}`;\n\n/**\n* Transform the \"NNxNNxNN\" representation to an object\n*/\nfunction GetObject(dimensions: Dimensions): BoxDimension {\n  const split = dimensions.split('x');\n  return {\n    length: Number(split[0]),\n    width: Number(split[1]),\n    height: Number(split[2])\n  }\n}\n\n/**\n* For each box, calculate its area and add to the total\n*/\nexport function Day2Puzzle1(): number {\n  let totalArea = 0;\n  input.forEach((value) => {\n    const obj = GetObject(value as Dimensions);\n    const area1 = obj.height * obj.length;\n    const area2 = obj.height * obj.width;\n    const area3 = obj.length * obj.width;\n\n    totalArea += 2 * (area1 + area2 + area3) + Math.min(area1, area2, area3);\n  });\n\n  return totalArea;\n}\n\nexport function Day2Puzzle2(): number {\n  let totalLength = 0;\n  input.forEach((value) => {\n    const obj = GetObject(value as Dimensions);\n    const perimeter = 2 * Math.min(\n      obj.length + obj.width,\n      obj.length + obj.height,\n      obj.height + obj.width\n    );\n    const volume = obj.length * obj.height * obj.width;\n    totalLength += perimeter + volume;\n  });\n\n  return totalLength;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsB;AAatB,mBAAmB,YAAsC;AACvD,QAAM,QAAQ,WAAW,MAAM;AAC/B,SAAO;AAAA,IACL,QAAQ,OAAO,MAAM;AAAA,IACrB,OAAO,OAAO,MAAM;AAAA,IACpB,QAAQ,OAAO,MAAM;AAAA;AAAA;AAOlB,uBAA+B;AACpC,MAAI,YAAY;AAChB,oBAAM,QAAQ,CAAC,UAAU;AACvB,UAAM,MAAM,UAAU;AACtB,UAAM,QAAQ,IAAI,SAAS,IAAI;AAC/B,UAAM,QAAQ,IAAI,SAAS,IAAI;AAC/B,UAAM,QAAQ,IAAI,SAAS,IAAI;AAE/B,iBAAa,IAAK,SAAQ,QAAQ,SAAS,KAAK,IAAI,OAAO,OAAO;AAAA;AAGpE,SAAO;AAAA;AAGF,uBAA+B;AACpC,MAAI,cAAc;AAClB,oBAAM,QAAQ,CAAC,UAAU;AACvB,UAAM,MAAM,UAAU;AACtB,UAAM,YAAY,IAAI,KAAK,IACzB,IAAI,SAAS,IAAI,OACjB,IAAI,SAAS,IAAI,QACjB,IAAI,SAAS,IAAI;AAEnB,UAAM,SAAS,IAAI,SAAS,IAAI,SAAS,IAAI;AAC7C,mBAAe,YAAY;AAAA;AAG7B,SAAO;AAAA;",
  "names": []
}
